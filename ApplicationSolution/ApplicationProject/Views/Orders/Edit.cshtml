@model ApplicationProject.Models.ApplicationDTO

@{
    ViewBag.Title = "Edit the Order details";
}

<h2>Edit the Order details</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderModel.OrderId)

        <div class="form-group">
            @Html.LabelFor(model => model.OrderModel.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderModel.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderModel.OrderNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderModel.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderModel.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderModel.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderModel.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderModel.Status, new List<SelectListItem> { new SelectListItem { Text = "Ready", Value = "Ready" }, { new SelectListItem { Text = "In Progress", Value = "In Progress" } } }, optionLabel : "Select status", htmlAttributes : new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.OrderModel.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientModel.Name, "Client Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderModel.ClientId, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClientModel.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default greenColor" />
            </div>
        </div>
    </div>
}
<br />
<div>
    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-default blueColor" })
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
